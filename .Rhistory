assembly <- assembly(
"https://jbrowse.org/genomes/hg19/fasta/hg19.fa.gz",
bgzip = TRUE,
aliases = c("GRCh37"),
refname_aliases = "https://s3.amazonaws.com/jbrowse.org/genomes/hg19/hg19_aliases.txt"
)
df <- data.frame(
chrom = c('1', '2'),
start = c(123, 456),
end = c(789, 101112),
name = c('feature1', 'feature2')
)
df_track <- track_data_frame(df, "foo", assembly)
# set up the final tracks object to be used
tracks <- tracks(
df_track
)
# determine what the browser displays by default
default_session <- default_session(
assembly,
c(df_track),
display_assembly = FALSE
)
output$widgetOutput <- renderJBrowseR(
JBrowseR("View",
assembly = assembly,
tracks = tracks,
location = "2:456",
defaultSession = default_session
)
)
}
shinyApp(ui, server)
ui <- fluidPage(
# Overriding the default bootstrap theme is needed to get proper font size
theme = bs_theme(version = 5),
titlePanel("JBrowseR Example"),
JBrowseROutput("widgetOutput")
)
ui <- fluidPage(
# Overriding the default bootstrap theme is needed to get proper font size
theme = bs_theme(version = 5),
titlePanel("JBrowseR Example"),
JBrowseROutput("widgetOutput")
)
server <- function(input, output, session) {
# create the assembly configuration
assembly <- assembly(
"https://jbrowse.org/genomes/hg19/fasta/hg19.fa.gz",
bgzip = TRUE,
aliases = c("GRCh37"),
refname_aliases = "https://s3.amazonaws.com/jbrowse.org/genomes/hg19/hg19_aliases.txt"
)
annotations_track <- track_feature(
"https://jbrowse.org/genomes/sars-cov2/sars-cov2-annotations.sorted.gff.gz",
assembly
)
df <- data.frame(
chrom = c('1', '2'),
start = c(123, 456),
end = c(789, 101112),
name = c('feature1', 'feature2')
)
df_track <- track_data_frame(df, "foo", assembly)
# set up the final tracks object to be used
tracks <- tracks(
df_track,annotations_track
)
# determine what the browser displays by default
default_session <- default_session(
assembly,
c(df_track),
display_assembly = FALSE
)
output$widgetOutput <- renderJBrowseR(
JBrowseR("View",
assembly = assembly,
tracks = tracks,
location = "20000:20066",
defaultSession = default_session
)
)
}
shinyApp(ui, server)
ui <- fluidPage(
# Overriding the default bootstrap theme is needed to get proper font size
theme = bs_theme(version = 5),
titlePanel("JBrowseR Example"),
JBrowseROutput("widgetOutput")
)
server <- function(input, output, session) {
# create the assembly configuration
assembly <- assembly(
"https://jbrowse.org/genomes/hg19/fasta/hg19.fa.gz",
bgzip = TRUE,
aliases = c("GRCh37"),
refname_aliases = "https://s3.amazonaws.com/jbrowse.org/genomes/hg19/hg19_aliases.txt"
)
annotations_track <- track_feature(
"https://jbrowse.org/genomes/sars-cov2/sars-cov2-annotations.sorted.gff.gz",
assembly
)
df <- data.frame(
chrom = c('1', '2'),
start = c(123, 456),
end = c(789, 101112),
name = c('feature1', 'feature2')
)
df_track <- track_data_frame(df, "foo", assembly)
# set up the final tracks object to be used
tracks <- tracks(
annotations_track ,df_track
)
# determine what the browser displays by default
default_session <- default_session(
assembly,
c(df_track,annotations_track),
display_assembly = FALSE
)
output$widgetOutput <- renderJBrowseR(
JBrowseR("View",
assembly = assembly,
tracks = tracks,
location = "20000:20066",
defaultSession = default_session
)
)
}
shinyApp(ui, server)
ui <- fluidPage(
# Overriding the default bootstrap theme is needed to get proper font size
theme = bs_theme(version = 5),
titlePanel("JBrowseR Example"),
JBrowseROutput("widgetOutput")
)
server <- function(input, output, session) {
# create the assembly configuration
assembly <- assembly(
"https://jbrowse.org/genomes/hg19/fasta/hg19.fa.gz",
bgzip = TRUE
)
annotations_track <- track_feature(
"https://jbrowse.org/genomes/sars-cov2/sars-cov2-annotations.sorted.gff.gz",
assembly
)
df <- data.frame(
chrom = c('1', '2'),
start = c(123, 456),
end = c(789, 101112),
name = c('feature1', 'feature2')
)
df_track <- track_data_frame(df, "foo", assembly)
# set up the final tracks object to be used
tracks <- tracks(
annotations_track ,df_track
)
# determine what the browser displays by default
default_session <- default_session(
assembly,
c(df_track),
display_assembly = FALSE
)
output$widgetOutput <- renderJBrowseR(
JBrowseR("View",
assembly = assembly,
tracks = tracks,
location = "20000:20066",
defaultSession = default_session
)
)
}
shinyApp(ui, server)
check_gff("https://jbrowse.org/genomes/sars-cov2/sars-cov2-annotations.sorted.gff.gz")
library(JBrowseR)
check_gff("https://jbrowse.org/genomes/sars-cov2/sars-cov2-annotations.sorted.gff.gz")
check_gff <- function(track_data) {
track_non_gz <- strip_gz(track_data)
if (!stringr::str_ends(track_non_gz, ".gff") && !stringr::str_ends(track_non_gz, ".gff3")) {
stop("feature data must be GFF3. Use .gff or .gff3 extension")
}
}
check_gff("https://jbrowse.org/genomes/sars-cov2/sars-cov2-annotations.sorted.gff.gz")
ui <- fluidPage(
# Overriding the default bootstrap theme is needed to get proper font size
theme = bs_theme(version = 5),
titlePanel("JBrowseR Example"),
JBrowseROutput("widgetOutput")
)
server <- function(input, output, session) {
# create the assembly configuration
assembly <- assembly(
"E:/yanyi/ara.fa.gz",
bgzip = TRUE
)
annotations_track <- track_feature(
"E:/yanyi/Athaliana.gff3.gz",
assembly
)
df <- data.frame(
chrom = c('Chr1', 'Chr2'),
start = c(123, 456),
end = c(789, 101112),
name = c('feature1', 'feature2')
)
df_track <- track_data_frame(df, "foo", assembly)
# set up the final tracks object to be used
tracks <- tracks(
annotations_track ,df_track
)
# determine what the browser displays by default
default_session <- default_session(
assembly,
c(df_track),
display_assembly = FALSE
)
output$widgetOutput <- renderJBrowseR(
JBrowseR("View",
assembly = assembly,
tracks = tracks,
location = "1:2000",
defaultSession = default_session
)
)
}
shinyApp(ui, server)
# create the assembly configuration
assembly <- assembly(
"E:/yanyi/ara.fa.gz",
bgzip = TRUE
)
assembly
server <- function(input, output, session) {
# create the assembly configuration
assembly <- assembly(
"E:/yanyi/ara.fa.gz",
bgzip = TRUE
)
annotations_track <- track_feature(
"E:/yanyi/Athaliana.gff3.gz",
assembly
)
df <- data.frame(
chrom = c('Chr1', 'Chr2'),
start = c(123, 456),
end = c(789, 101112),
name = c('feature1', 'feature2')
)
df_track <- track_data_frame(df, "foo", assembly)
# set up the final tracks object to be used
tracks <- tracks(
annotations_track ,df_track
)
# determine what the browser displays by default
default_session <- default_session(
assembly,
c(df_track),
display_assembly = FALSE
)
output$widgetOutput <- renderJBrowseR(
JBrowseR("View",
assembly = assembly,
tracks = tracks,
defaultSession = default_session
)
)
}
shinyApp(ui, server)
server <- function(input, output, session) {
# create the assembly configuration
assembly <- assembly(
"E:/yanyi/ara.fa.gz",
bgzip = TRUE
)
annotations_track <- track_feature(
"E:/yanyi/Athaliana.gff3.gz",
assembly
)
# df <- data.frame(
#   chrom = c('Chr1', 'Chr2'),
#   start = c(123, 456),
#   end = c(789, 101112),
#   name = c('feature1', 'feature2')
# )
#
# df_track <- track_data_frame(df, "foo", assembly)
# set up the final tracks object to be used
tracks <- tracks(
annotations_track #,df_track
)
# determine what the browser displays by default
default_session <- default_session(
assembly,
c(tracks),
display_assembly = FALSE
)
output$widgetOutput <- renderJBrowseR(
JBrowseR("View",
assembly = assembly,
tracks = tracks,
defaultSession = default_session
)
)
}
shinyApp(ui, server)
library(JBrowseR)
library(bslib)
# create the assembly configuration
assembly <- assembly(
"E:/yanyi/ara.fa.gz",
bgzip = TRUE
)
assembly
assembly(
"https://jbrowse.org/genomes/hg19/fasta/hg19.fa.gz",
bgzip = TRUE,
aliases = c("GRCh37"),
refname_aliases = "https://s3.amazonaws.com/jbrowse.org/genomes/hg19/hg19_aliases.txt"
)
ui <- fluidPage(
titlePanel("Sars-CoV-2 JBrowseR Example"),
# this adds to the browser to the UI, and specifies the output ID in the server
JBrowseROutput("browserOutput")
)
server <- function(input, output, session) {
# create the necessary JB2 assembly configuration
assembly <- assembly(
"https://jbrowse.org/genomes/sars-cov2/fasta/sars-cov2.fa.gz",
bgzip = TRUE
)
# create configuration for a JB2 GFF FeatureTrack
annotations_track <- track_feature(
"https://jbrowse.org/genomes/sars-cov2/sars-cov2-annotations.sorted.gff.gz",
assembly
)
# create the tracks array to pass to browser
tracks <- tracks(
annotations_track
)
# set up the default session for the browser
default_session <- default_session(
assembly,
c(annotations_track)
)
theme <- theme("#5da8a3", "#333")
# link the UI with the browser widget
output$browserOutput <- renderJBrowseR(
JBrowseR(
"View",
assembly = assembly,
tracks = tracks,
location = "NC_045512.2:1..100",
defaultSession = default_session,
theme = theme
)
)
}
shinyApp(ui, server)
assembly(
"https://jbrowse.org/genomes/sars-cov2/fasta/sars-cov2.fa.gz",
bgzip = TRUE
)
# create the assembly configuration
assembly <- assembly(
"E:/yanyi/ara.fa.gz",
bgzip = TRUE
)
assembly
assembly <- assembly(
"https://jbrowse.org/genomes/sars-cov2/fasta/sars-cov2.fa.gz",
bgzip = TRUE
)
assembly
data_server <- serve_data("E:/yanyi/")
server <- function(input, output, session) {
# create the assembly configuration
assembly <- assembly(
"E:/yanyi/ara.fa.gz",
bgzip = TRUE
)
annotations_track <- track_feature(
"E:/yanyi/Athaliana.gff3.gz",
assembly
)
# df <- data.frame(
#   chrom = c('Chr1', 'Chr2'),
#   start = c(123, 456),
#   end = c(789, 101112),
#   name = c('feature1', 'feature2')
# )
#
# df_track <- track_data_frame(df, "foo", assembly)
# set up the final tracks object to be used
tracks <- tracks(
annotations_track #,df_track
)
# determine what the browser displays by default
default_session <- default_session(
assembly,
c(tracks),
display_assembly = FALSE
)
output$widgetOutput <- renderJBrowseR(
JBrowseR("View",
assembly = assembly,
tracks = tracks,
defaultSession = default_session
)
)
}
shinyApp(ui, server)
data_server$stop_server()
data_server <- serve_data("E:/yanyi/")
data_server
# create the assembly configuration
assembly <- assembly(
"E:/yanyi/ara.fa.gz",
bgzip = TRUE
)
assembly
data_server$stop_server()
# create the assembly configuration
assembly <- assembly(
"E:/yanyi/ara.fa.gz",
bgzip = TRUE
)
assembly
annotations_track <- track_feature(
"E:/yanyi/Athaliana.gff3.gz",
assembly
)
annotations_track
# create the assembly configuration
assembly <- assembly(
"E:/yanyi/ara.fa.gz",
bgzip = TRUE
)
server <- function(input, output, session) {
# create the assembly configuration
assembly <- assembly(
"E:/yanyi/ara.fa.gz",
bgzip = TRUE
)
annotations_track <- track_feature(
"E:/yanyi/Athaliana.gff3.gz",
assembly
)
df <- data.frame(
chrom = c('Chr1', 'Chr2'),
start = c(123, 456),
end = c(789, 101112),
name = c('feature1', 'feature2')
)
df_track <- track_data_frame(df, "foo", assembly)
# set up the final tracks object to be used
tracks <- tracks(
df_track
)
# determine what the browser displays by default
default_session <- default_session(
assembly,
c(tracks),
display_assembly = FALSE
)
output$widgetOutput <- renderJBrowseR(
JBrowseR("View",
assembly = assembly,
tracks = tracks,
defaultSession = default_session
)
)
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Sars-CoV-2 JBrowseR Example"),
# this adds to the browser to the UI, and specifies the output ID in the server
JBrowseROutput("browserOutput")
)
server <- function(input, output, session) {
# create the necessary JB2 assembly configuration
assembly <- assembly(
"https://jbrowse.org/genomes/sars-cov2/fasta/sars-cov2.fa.gz",
bgzip = TRUE
)
# link the UI with the browser widget
output$browserOutput <- renderJBrowseR(
JBrowseR(
"View",
assembly = assembly
)
)
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Sars-CoV-2 JBrowseR Example"),
# this adds to the browser to the UI, and specifies the output ID in the server
JBrowseROutput("browserOutput")
)
server <- function(input, output, session) {
# create the necessary JB2 assembly configuration
assembly <- assembly(
"E:/yanyi/ara.fa.gz",
bgzip = TRUE
)
# link the UI with the browser widget
output$browserOutput <- renderJBrowseR(
JBrowseR(
"View",
assembly = assembly
)
)
}
shinyApp(ui, server)
